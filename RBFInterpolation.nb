(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     34743,        694]
NotebookOptionsPosition[     33831,        659]
NotebookOutlinePosition[     34167,        674]
CellTagsIndexPosition[     34124,        671]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<Obtuse`\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.609065470877453*^9, 3.609065507095215*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "compat"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Combinatorica Graph and Permutations functionality has \
been superseded by preloaded functionality. The package now being loaded may \
conflict with this. Please see the Compatibility Guide for details.\"\>"}]], \
"Message", "MSG",
 CellChangeTimes->{3.609086105505333*^9, 3.609170053495791*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RadialBasisFunction", "::", "shdw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Symbol \[NoBreak]\\!\\(\\\"RadialBasisFunction\\\"\\)\
\[NoBreak] appears in multiple contexts \[NoBreak]\\!\\({\\\"Obtuse`\\\", \
\\\"Global`\\\"}\\)\[NoBreak]; definitions in context \
\[NoBreak]\\!\\(\\\"Obtuse`\\\"\\)\[NoBreak] may shadow or be shadowed by \
other definitions. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/shdw\\\", ButtonNote -> \
\\\"Obtuse`RadialBasisFunction::shdw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.609086105505333*^9, 3.609170054002097*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6090656338199043`*^9, 3.609065642498605*^9}, {
  3.609066009085981*^9, 3.609066021759449*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"piece", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.5", ",", 
        RowBox[{"x", "<", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"x", "\[GreaterEqual]", "1"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"%", "/.", 
        RowBox[{"x", "\[Rule]", "t"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"Range", "[", 
        RowBox[{"0.5", ",", "1.5", ",", "0.1"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pieceplot", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"piece", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataplot", "=", 
   RowBox[{"ListPlot", "[", "data", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"pieceplot", ",", "dataplot", ",", " ", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.5"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.609066648822158*^9, 3.609066817475203*^9}, {
   3.609067022955077*^9, 3.6090670687242813`*^9}, {3.609067105973427*^9, 
   3.609067270060095*^9}, 3.609086485651791*^9, {3.60908655218044*^9, 
   3.609086553571752*^9}, {3.609086652214106*^9, 3.6090866529863567`*^9}, {
   3.6090867187861967`*^9, 3.609086743832542*^9}, {3.609086877810178*^9, 
   3.60908687825445*^9}, {3.6091699353935947`*^9, 3.609169948481432*^9}, {
   3.609169986797483*^9, 3.609170026120161*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQ7ZX64uKBl6l2DGDwwH6BqH9bl+QUexi/kWOzeqfk
Ejg/InLh+g8ft8D53P8bY9zl9sP5qoHvXhzuPgLnl5+ztJ/x5SScL75F8B4j
43k4f9sj5zPnbS7B+Yey5kpHvrkC539Vs+Vfm3sdzmf6uVpAWvUWnG/2P2Fb
8Lo7cP6ZFpNzx7Tuw/nyE17/XPnuAZz/+vv9e1cNHsH5S17tPsXX9xjO55Nd
/v7Jkydwfk/m1rQFKs/g/G8Oq59k1D+H80uMjmwRO/wCzr+/7kj3RcVXcP7v
rCuzNatew/najuz/0na/gfPdFymmbxR/h9Aff8DFcxeCXy4br/Qw5j2cb+BT
FD9lDYJvb3Kt/dgvBB8ATuybxw==
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQ/fCpyJ45TB/sGcDgg33CB2EmeWYE/1rnn9lzWBF8
b+WnplIcCL5Z2LZMUV4EX6mzfa6AEIL/850mK7sMgn8h5EzOX1UEv05B0OaV
JYKv8yaU+7ovgr/gr1KX7xIEX5j/A8eRXwg+y/7Z65XnfITzs0123+T0/gTn
r/ZMWrDvG4L/9bWUwLNpn+H8rcHuzFNcvsD59R6t87c8Q/AV73rdWNz6Fc63
Mm+ZImn0Dc6PkTv/k/Eygv/1VO+jgsbvcP4MlriSIJUfCPff27qI6QiCz1rb
GGJZ+BPOZ1gZt/6R0C84v2jW+l6hQwj+Xu0ODsG833C+oFeRThPfHzj/ju6F
y5V7EPwN8+xVnsT9hfNj15sJyv5D8BtaFzbeWfUPzl/7QnY2n89/RHy2iHiw
L0Pwp8tzf/3/H8EHALD2ubg=
       "]]}, {}}, {{}, {}, {}}}, {{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], 
     PointBox[{{0.5, 0.5}, {0.6, 0.5}, {0.7, 0.5}, {0.8, 0.5}, {0.9, 0.5}, {
      1., 1.}, {1.1, 1.}, {1.2000000000000002`, 1.}, {1.3, 1.}, {1.4, 1.}, {
      1.5, 1.}}]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{0, 1.5},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.609067180188486*^9, 3.609067271004575*^9}, 
   3.609072343015203*^9, 3.609086109509039*^9, 3.609086486791573*^9, 
   3.6090865636212873`*^9, 3.6090866565239487`*^9, {3.609086720658709*^9, 
   3.60908674452195*^9}, 3.609086878856998*^9, 3.609154345933103*^9, {
   3.609170029563506*^9, 3.6091700560360622`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.609072524153113*^9, 3.609072524733124*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]", "=", 
   FractionBox["1", 
    RowBox[{"2", 
     RowBox[{"r0", "^", "2"}]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.609067363646747*^9, 3.60906739966255*^9}, {
  3.60906744588583*^9, 3.609067465075754*^9}, {3.609067515354051*^9, 
  3.609067519530452*^9}, {3.609072274202364*^9, 3.609072274598476*^9}, {
  3.609072526380518*^9, 3.6090726698480577`*^9}, {3.609072731528295*^9, 
  3.6090729150879498`*^9}, {3.609073560577982*^9, 3.609073561893024*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.609072993215026*^9, 3.609072997382264*^9}, {
  3.609073426386114*^9, 3.609073434498846*^9}}],

Cell[BoxData[
 RowBox[{"1.0", "/", "0.0025"}]], "Input",
 CellChangeTimes->{{3.609086408969619*^9, 3.6090864195407963`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sqrt", "[", "0.0025", "]"}], "/", "2"}]], "Input",
 CellChangeTimes->{{3.609086437123238*^9, 3.609086448658773*^9}}],

Cell[BoxData["0.025`"], "Output",
 CellChangeTimes->{{3.60908644307826*^9, 3.6090864490717*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RBFPlot", "[", "r0_", "]"}], ":=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Interpolation", "[", 
       RowBox[{"data", ",", 
        RowBox[{"Method", "\[Rule]", "\"\<RBF\>\""}], ",", 
        RowBox[{"RadialBasisFunction", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "#"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", " ", 
                RowBox[{"r0", "^", "2"}]}], ")"}]}], "]"}], ")"}], "&"}], 
          ")"}]}]}], "]"}], "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.5", ",", "1.5"}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{3.6090869052801323`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"pieceplot", ",", "dataplot", ",", 
     RowBox[{"RBFPlot", "[", "0.1", "]"}]}], "}"}], ",", " ", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1.5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.609072951623398*^9, 3.609072979474512*^9}, {
   3.609073381191389*^9, 3.609073407483626*^9}, {3.609073438017385*^9, 
   3.609073526480563*^9}, {3.609074005831077*^9, 3.609074057301423*^9}, {
   3.609074096166872*^9, 3.609074108371869*^9}, {3.609074331859788*^9, 
   3.609074381008977*^9}, {3.609085782008515*^9, 3.609085822473013*^9}, {
   3.609086286822852*^9, 3.609086331652348*^9}, 3.609086474393572*^9, {
   3.609086505615741*^9, 3.60908652166111*^9}, {3.6090865808259172`*^9, 
   3.609086637283023*^9}, {3.609086678576922*^9, 3.609086700468437*^9}, {
   3.609086857354998*^9, 3.609086867014927*^9}, 3.609170046187407*^9, {
   3.609170076678953*^9, 3.609170127054515*^9}, {3.609170176361415*^9, 
   3.609170176837975*^9}, {3.609170412301708*^9, 3.6091704126146193`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQ7ZX64uKBl6l2DGDwwH6BqH9bl+QUexi/kWOzeqfk
Ejg/InLh+g8ft8D53P8bY9zl9sP5qoHvXhzuPgLnl5+ztJ/x5SScL75F8B4j
43k4f9sj5zPnbS7B+Yey5kpHvrkC539Vs+Vfm3sdzmf6uVpAWvUWnG/2P2Fb
8Lo7cP6ZFpNzx7Tuw/nyE17/XPnuAZz/+vv9e1cNHsH5S17tPsXX9xjO55Nd
/v7Jkydwfk/m1rQFKs/g/G8Oq59k1D+H80uMjmwRO/wCzr+/7kj3RcVXcP7v
rCuzNatew/najuz/0na/gfPdFymmbxR/h9Aff8DFcxeCXy4br/Qw5j2cb+BT
FD9lDYJvb3Kt/dgvBB8ATuybxw==
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQ/fCpyJ45TB/sGcDgg33CB2EmeWYE/1rnn9lzWBF8
b+WnplIcCL5Z2LZMUV4EX6mzfa6AEIL/850mK7sMgn8h5EzOX1UEv05B0OaV
JYKv8yaU+7ovgr/gr1KX7xIEX5j/A8eRXwg+y/7Z65XnfITzs0123+T0/gTn
r/ZMWrDvG4L/9bWUwLNpn+H8rcHuzFNcvsD59R6t87c8Q/AV73rdWNz6Fc63
Mm+ZImn0Dc6PkTv/k/Eygv/1VO+jgsbvcP4MlriSIJUfCPff27qI6QiCz1rb
GGJZ+BPOZ1gZt/6R0C84v2jW+l6hQwj+Xu0ODsG833C+oFeRThPfHzj/ju6F
y5V7EPwN8+xVnsT9hfNj15sJyv5D8BtaFzbeWfUPzl/7QnY2n89/RHy2iHiw
L0Pwp8tzf/3/H8EHALD2ubg=
       "]]}, {}}, {{}, {}, {}}}, {{}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], 
     PointBox[{{0.5, 0.5}, {0.6, 0.5}, {0.7, 0.5}, {0.8, 0.5}, {0.9, 0.5}, {
      1., 1.}, {1.1, 1.}, {1.2000000000000002`, 1.}, {1.3, 1.}, {1.4, 1.}, {
      1.5, 1.}}]}, {}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
sguZkHZ25+0oG/TBXD5r7EqYwG/+VKQJfXTRn6q7HW+YwGd0Ye0O9M2r/R84
KL1jwpkgx0clyA4sW437FUw4JbPu2FEH9L10jj/a1UzwPZ4qa3yeDv5knWsV
dUzwj33cZuSEvizMff9yPeYv3Ti7Ftlu90P28Y9M0H0VOq/gTIcTbj8Dv39i
gna3Ih+nC/qqCad7Y1+YUGis+DnaFfMbFWGk8I0JnnIClpPIC7L5Al6tTDhd
72utjb59yJ2RsPSdCY25tkV05IKpO1nCP5lw/Wl4gBz6+O3R2a5nu5lwLkc0
0Av5sWKzbEYPE0wLKsbfId/wXF8i34fx73ZbUEOfP7Vu3/Vr/UzYb38s9T/f
71BsofpugAnqOZWvypB16KnvtYaYkL6ulL3Dgw6VMfW3I4lMaCp2P2SOrLCH
rNVGYoIo576hMOSMDh5u4REmZA22UMuQhbwUWqxHMX8Tf22HkMMFTR6kk5ng
mpB1gOcSHf6UXj9FHmPCb7FXXkrIRGbVz6sTTHh6tGzLdWSzeELi20kmmMx+
i4pF/ryf89wilQn6KZ7nCpHVfu7arjXNhPk/jfGfkQt99IYjZpgw68G3bxBZ
QuRyTisN9ToRfnAWOf5tzAWhWSb8WhGTyXkZ821ZLm/NYEJ7R6T3BuSb7J6Z
NCYTav+SCrciTz/9+3p0DvWfIXpKGtnh0HYfuXkm6FlXWykhd/VqHbrKZsIu
BYeve5FP3nD9+2aBCRoRRS/2I1eJ3qv9+5sJlapnZ/YhK1UVBh/7ywTnczsz
VJCfn+3QjlhkQqdrf40csvDfudWtS0yw5rHRlUSOeLb5q+A/JrxWfKC5CfnP
EfWHVhxzEDrn/IIX2XPA/nTaijnIfU4J/I3nIwWECI9yzoHiU+lPY8hntr7o
kV01Bwb6ENSB3FzzJfkK1xwwD53Nq0Q+Yjdj+4Z7Dk4MFeunIxctb9jxd/Uc
tBaEOtxFlkw/MKrJi+v9lp12RH4C1i/C+ebg1Z+lWU1kHmKA+7c1c2D6zuPq
FuSAOxmKgmvnYHhx8iIL802TaKRbrpuDg2YcxK/IjvXjZanr56CYrt6VjqzH
qawmKzgHJb+Lj2oiL76+n3xBaA4u7v1Tuxa56DzlzwvhObjp2DrYi3oUrn9e
vXvTHLgaTP9xQ266uizuunkO3MifFuWRb0rYBOSIzkGZBGRNo96Jt4WP7twy
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
AADwP8kcjio=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{0, 1.5},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.609072988843494*^9, 3.609073000976534*^9}, {
   3.609073384518071*^9, 3.609073527501336*^9}, 3.609074059171039*^9, {
   3.609074099874051*^9, 3.609074109601766*^9}, {3.6090743339806137`*^9, 
   3.609074383004599*^9}, {3.60908577541682*^9, 3.6090858228447104`*^9}, 
   3.609085863068437*^9, 3.60908611631842*^9, {3.609086288946081*^9, 
   3.609086332157178*^9}, 3.609086475596017*^9, 3.6090865582345133`*^9, {
   3.609086601815268*^9, 3.609086625057007*^9}, 3.609086656357728*^9, {
   3.609086702717181*^9, 3.609086766443688*^9}, {3.609086852611527*^9, 
   3.6090868862976093`*^9}, {3.609170040171229*^9, 3.609170128481189*^9}, 
   3.609170179272334*^9, 3.609170415781273*^9}]
}, Open  ]]
},
WindowSize->{740, 599},
WindowMargins->{{Automatic, -10}, {5, Automatic}},
FrontEndVersion->"9.0 for Linux x86 (64-bit) (February 7, 2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 156, 3, 32, "Input"],
Cell[738, 27, 419, 9, 81, "Message"],
Cell[1160, 38, 714, 13, 61, "Message"]
}, Open  ]],
Cell[1889, 54, 143, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[2057, 60, 1863, 51, 143, "Input"],
Cell[3923, 113, 1838, 38, 242, "Output"]
}, Open  ]],
Cell[5776, 154, 92, 1, 32, "Input"],
Cell[5871, 157, 501, 10, 56, "Input"],
Cell[6375, 169, 141, 2, 32, "Input"],
Cell[6519, 173, 124, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[6668, 179, 151, 3, 32, "Input"],
Cell[6822, 184, 96, 1, 32, "Output"]
}, Open  ]],
Cell[6933, 188, 806, 24, 99, "Input"],
Cell[CellGroupData[{
Cell[7764, 216, 1186, 22, 55, "Input"],
Cell[8953, 240, 24862, 416, 275, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
